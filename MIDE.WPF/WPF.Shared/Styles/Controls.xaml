<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:api="clr-namespace:MIDE.API.Components;assembly=api"
                    xmlns:json="clr-namespace:MIDE.Schemes.JSON;assembly=api"
                    xmlns:c="clr-namespace:MIDE.WPF.ValueConverters"
                    xmlns:local="clr-namespace:MIDE.WPF.Styles"
                    xmlns:ctr="clr-namespace:MIDE.WPF.Controls"
                    xmlns:it="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:h="clr-namespace:MIDE.WPF.Helpers"
                    xmlns:ui="clr-namespace:MIDE.WPF.UI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="DefaultControls.xaml"/>
        <ResourceDictionary Source="Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type ctr:Resizer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctr:Resizer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ctr:ResizablePanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctr:ResizablePanel}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>
                        
                        <!--<ctr:Resizer Cursor="SizeNWSE" Background="DarkBlue" Width="3" Height="3"
                                              Grid.Row="0" Grid.Column="0" ThumbDirection="TopLeft"/>-->

                        <ctr:Resizer Cursor="SizeWE" Background="DarkBlue" Width="3" 
                                              Grid.Row="1" Grid.Column="0" ThumbDirection="Left"/>

                        <!--<ctr:Resizer Cursor="SizeNESW" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="2" Grid.Column="0" ThumbDirection="BottomLeft" />-->

                        <ctr:Resizer Cursor="SizeNS" Background="DarkBlue" Height="3" 
                                              Grid.Row="2" Grid.Column="1" ThumbDirection="Bottom" />

                        <!--<ctr:Resizer Cursor="SizeNWSE" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="2" Grid.Column="2" ThumbDirection="BottomRight" />-->

                        <ctr:Resizer Cursor="SizeWE" Background="DarkBlue" Width="3"  
                                              Grid.Row="1" Grid.Column="2" ThumbDirection="Right"/>

                        <!--<ctr:Resizer Cursor="SizeNESW" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="0" Grid.Column="2" ThumbDirection="TopRight"/>-->

                        <ctr:Resizer Cursor="SizeNS" Background="DarkBlue"  Height="3" 
                                              Grid.Row="0" Grid.Column="1" ThumbDirection="Top"/>

                        <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Content}" 
                                             Margin="{TemplateBinding Padding}"></ContentPresenter>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!--API Controls-->
    <DataTemplate DataType="{x:Type api:Button}">
        <Button Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                IsEnabled="{Binding IsEnabled}"
                Command="{Binding PressCommand, Converter={c:RelayCommandConverter}}"
                Style="{StaticResource ActionButton}"
                Padding="40 8"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:CheckBox}">
        <CheckBox Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                  IsChecked="{Binding IsChecked}"
                  IsEnabled="{Binding IsEnabled}"
                  Content="{Binding Caption}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:Label}">
        <TextBlock Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                   IsEnabled="{Binding IsEnabled}"
                   Text="{Binding Text}"
                   Style="{StaticResource DefaultTextBlock}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:RadioButton}">
        <RadioButton Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                     IsEnabled="{Binding IsEnabled}"
                     IsChecked="{Binding IsChecked}"
                     Content="{Binding Caption}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:TextBox}">
        <TextBox Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                 IsEnabled="{Binding IsEnabled}"
                 IsReadOnly="{Binding IsReadonly}"
                 DataContext="{Binding}"
                 VerticalContentAlignment="Center"
                 Text="{Binding Text, Delay=500, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                            <Setter Property="ToolTip"
                                    Value="{Binding DataContext.Errors, RelativeSource={RelativeSource Self},
                                                    Converter={c:CollectionToString}}" />
                            <Setter Property="Background" Value="{StaticResource Textbox_BackgroundInvalidated_Brush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:ActionTextBox}">
        <Border BorderThickness="1" 
                BorderBrush="{DynamicResource Textbox_Border_Brush}"
                IsEnabled="{Binding IsEnabled}"
                Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                Background="{DynamicResource Textbox_Background_Brush}"
                Name="border">
            <Grid Name="grid">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Text="{Binding Text, Delay=500, UpdateSourceTrigger=PropertyChanged}"
                         BorderThickness="0"
                         Background="Transparent"
                         VerticalContentAlignment="Center"
                         IsReadOnly="{Binding IsReadonly}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                    <Setter Property="ToolTip"
                                            Value="{Binding DataContext.Errors, RelativeSource={RelativeSource Self},
                                                            Converter={c:CollectionToString}}" />
                                    <Setter Property="TextBox.Background"
                                            Value="{StaticResource Textbox_BackgroundInvalidated_Brush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <ContentPresenter Content="{Binding ActionButton}"
                                  Grid.Column="1" Margin="0"/>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:TreeView}">
        <TreeView ItemsSource="{Binding Items}" h:TreeViewHelpers.SelectItemOnRightClick="True">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource DefaultTreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu ItemsSource="{Binding ContextMenu.Children}"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Content="{Binding ItemGlyph}" Style="{StaticResource GlyphPresenter}"/>
                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Caption}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <it:Interaction.Behaviors>
                <ui:TreeViewMultipleSelectionBehavior SelectedItems="{Binding SelectedItems}"/>
            </it:Interaction.Behaviors>
        </TreeView>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:ListBox}">
        <ListBox ItemsSource="{Binding Items}"
                 Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                 SelectionMode="{Binding IsMultiselect, Converter={c:BoolToMultipleSelectionMode}}"
                 IsEnabled="{Binding IsEnabled}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:ListBoxItem}">
        <ContentPresenter Content="{Binding Value}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type api:ToolbarButton}">
        <Button IsEnabled="{Binding IsEnabled}"
                Command="{Binding PressCommand, Converter={c:RelayCommandConverter}}"
                Style="{StaticResource ActionButton}"/>
    </DataTemplate>
    <!--API Control-->
    
    <!--API Tabs-->
    <DataTemplate DataType="{x:Type api:FileExplorer}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ContentPresenter Content="{Binding SearchBox}"/>
            <ContentPresenter Content="{Binding TreeView}" Grid.Row="2"/>
        </Grid>
    </DataTemplate>
    <!--API Tabs-->

    <!--API Dialog Boxes-->
    <DataTemplate DataType="{x:Type api:MessageDialogBox}">
        <Grid MinHeight="80" MinWidth="140">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Message}" TextWrapping="Wrap"
                       VerticalAlignment="Center"/>
            <ContentPresenter Content="{Binding OkButton}"
                              HorizontalAlignment="Center"
                              Grid.Row="2"/>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:QuestionDialogBox}">
        <Grid MinHeight="80" MinWidth="140">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Question}" TextWrapping="Wrap"
                       VerticalAlignment="Center"/>
            <ContentPresenter Content="{Binding YesButton}"
                              HorizontalAlignment="Center"
                              Grid.Row="2" Grid.Column="1"/>
            <ContentPresenter Content="{Binding NoButton}"
                              HorizontalAlignment="Center"
                              Grid.Row="2" Grid.Column="3"/>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:TextBoxDialogBox}">
        <Grid MinHeight="80" MinWidth="140">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Message}" TextWrapping="Wrap"
                       VerticalAlignment="Center"/>
            <ContentPresenter Content="{Binding Input}"
                              Grid.Column="2" VerticalAlignment="Center"/>
            <Grid Grid.ColumnSpan="3" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Content="{Binding AcceptButton}"
                              HorizontalAlignment="Center"
                              Grid.Column="1"/>
                <ContentPresenter Content="{Binding CancelButton}"
                              HorizontalAlignment="Center"
                              Grid.Column="3"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:CreateProjectDialogBox}">
        <Grid MinHeight="200" MinWidth="520"
              MaxHeight="640" MaxWidth="520">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Content="{Binding SearchBox}"
                                  Grid.ColumnSpan="5"/>
                <ContentPresenter Content="{Binding TemplatesList}"
                                  Grid.Row="2" Grid.ColumnSpan="5"/>
                <ContentPresenter Content="{Binding ProjectNameLabel}"
                                  Grid.Row="4"/>
                <ContentPresenter Content="{Binding ProjectName}"
                                  Grid.Row="4" Grid.Column="2"/>
                <ContentPresenter Content="{Binding ProjectPathLabel}"
                                  Grid.Row="6"/>
                <ContentPresenter Content="{Binding ProjectPath}"
                                  Grid.Row="6" Grid.Column="2"/>
                <ContentPresenter Content="{Binding BrowseButton}"
                                  Grid.Row="6" Grid.Column="4"/>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Content="{Binding AcceptButton}"
                              HorizontalAlignment="Center"/>
                <ContentPresenter Content="{Binding CancelButton}"
                              HorizontalAlignment="Center"
                              Grid.Column="2"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type json:ProjectScheme}">
        <Grid Margin="0 2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Image Source="{Binding Icon, Converter={c:PathToBitmap}}" Grid.RowSpan="3" Width="48"/>
            <TextBlock Text="{Binding Name}" Foreground="White"
                             FontSize="18"  Grid.Column="2"/>
            <TextBlock Text="{Binding Description}"
                               Foreground="Silver" FontSize="16"
                               Grid.Column="2" Grid.Row="2"/>
        </Grid>
    </DataTemplate>
    <!--API Dialog Boxes-->
</ResourceDictionary>