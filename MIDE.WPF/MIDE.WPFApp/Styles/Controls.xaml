<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:api="clr-namespace:MIDE.API.Components;assembly=api"
                    xmlns:c="clr-namespace:MIDE.WPFApp.ValueConverters"
                    xmlns:local="clr-namespace:MIDE.WPFApp.Styles"
                    xmlns:ctr="clr-namespace:MIDE.WPFApp.Controls"
                    xmlns:v="clr-namespace:MIDE.API.Visuals;assembly=api">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="DefaultControls.xaml"/>
        <ResourceDictionary Source="Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type ctr:Resizer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctr:Resizer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ctr:ResizablePanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctr:ResizablePanel}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>
                        
                        <!--<ctr:Resizer Cursor="SizeNWSE" Background="DarkBlue" Width="3" Height="3"
                                              Grid.Row="0" Grid.Column="0" ThumbDirection="TopLeft"/>-->

                        <ctr:Resizer Cursor="SizeWE" Background="DarkBlue" Width="3" 
                                              Grid.Row="1" Grid.Column="0" ThumbDirection="Left"/>

                        <!--<ctr:Resizer Cursor="SizeNESW" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="2" Grid.Column="0" ThumbDirection="BottomLeft" />-->

                        <ctr:Resizer Cursor="SizeNS" Background="DarkBlue" Height="3" 
                                              Grid.Row="2" Grid.Column="1" ThumbDirection="Bottom" />

                        <!--<ctr:Resizer Cursor="SizeNWSE" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="2" Grid.Column="2" ThumbDirection="BottomRight" />-->

                        <ctr:Resizer Cursor="SizeWE" Background="DarkBlue" Width="3"  
                                              Grid.Row="1" Grid.Column="2" ThumbDirection="Right"/>

                        <!--<ctr:Resizer Cursor="SizeNESW" Background="DarkBlue" Width="3" Height="3" 
                                              Grid.Row="0" Grid.Column="2" ThumbDirection="TopRight"/>-->

                        <ctr:Resizer Cursor="SizeNS" Background="DarkBlue"  Height="3" 
                                              Grid.Row="0" Grid.Column="1" ThumbDirection="Top"/>

                        <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Content}" 
                                             Margin="{TemplateBinding Padding}"></ContentPresenter>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--API Controls-->
    <DataTemplate DataType="{x:Type api:Button}">
        <Button Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                IsEnabled="{Binding IsEnabled}"
                Command="{Binding PressCommand, Converter={c:RelayCommandConverter}}"
                Style="{StaticResource ActionButton}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:CheckBox}">
        <CheckBox Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                  Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                  Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                  Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                  Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                  IsChecked="{Binding IsChecked}"
                  IsEnabled="{Binding IsEnabled}"
                  Content="{Binding Caption}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:GridLayout}">
        <ctr:Grid Layout="{Binding}"></ctr:Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:Label}">
        <TextBlock Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                   Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                   Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                   Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                   Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                   IsEnabled="{Binding IsEnabled}"
                   Text="{Binding Text}"
                   Style="{StaticResource DefaultTextBlock}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:RadioButton}">
        <RadioButton Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                     Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                     Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                     Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                     Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                     IsEnabled="{Binding IsEnabled}"
                     IsChecked="{Binding IsChecked}"
                     Content="{Binding Caption}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:TextBox}">
        <TextBox Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                 Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                 Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                 Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                 Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                 IsEnabled="{Binding IsEnabled}"
                 IsReadOnly="{Binding IsReadonly}"
                 Text="{Binding Text}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:Panel}">
        <ItemsControl ItemsSource="{Binding Children}"
                      Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                      Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                      Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                      Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                      Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                      IsEnabled="{Binding IsEnabled}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:StackPanel}">
        <ItemsControl ItemsSource="{Binding Children}"
                      Margin="{Binding Margin, Converter={c:MeasurementsConverter}}" 
                      Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                      Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                      Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                      Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                      IsEnabled="{Binding IsEnabled}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="{Binding Orientation, Converter={c:OrientationConverter}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:TreeView}">
        <TreeView ItemsSource="{Binding Items}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource DefaultTreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Content="{Binding ItemGlyph}" Style="{StaticResource GlyphPresenter}"/>
                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Caption}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </DataTemplate>
    <DataTemplate DataType="{x:Type api:ActionTextBox}">
        <Border BorderThickness="1" BorderBrush="{StaticResource BackgroundLightBrush}"
                Width="{Binding Width, Converter={c:MeasurementsConverter}}"
                Height="{Binding Height, Converter={c:MeasurementsConverter}}"
                Margin="{Binding Margin, Converter={c:MeasurementsConverter}}"
                Padding="{Binding Padding, Converter={c:MeasurementsConverter}}"
                IsEnabled="{Binding IsEnabled}"
                Visibility="{Binding Visibility, Converter={c:VisibilityConverter}}"
                Name="border">
            <Grid Background="{StaticResource BackgroundNormalBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Text}"
                         BorderThickness="0"
                         Background="Transparent"
                         IsReadOnly="{Binding IsReadonly}"/>
                <ContentPresenter Content="{Binding ActionButton}"
                                  Grid.Column="1"/>
            </Grid>
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundBlueLight}" Duration="0:0:0.3" 
                                            Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="{StaticResource BackgroundLight}" Duration="0:0:0.3" 
                                            Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type api:ToolbarButton}">
        <Button IsEnabled="{Binding IsEnabled}"
                Command="{Binding PressCommand, Converter={c:RelayCommandConverter}}"
                Style="{StaticResource ActionButton}"/>
    </DataTemplate>
    <!--API Control-->
</ResourceDictionary>