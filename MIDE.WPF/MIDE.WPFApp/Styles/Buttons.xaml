<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Texts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}" x:Key="CommandButton">
        <Setter Property="Background" Value="{StaticResource BackgroundVeryLightBrush}" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundSemiLightBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"                            
                            Background="{TemplateBinding Background}"
                            Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Button}}">
                        <TextBlock VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Default button style-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"                            
                            Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundSemiLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SmallControlButton">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="Margin" Value="2 0 0 2"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            Width="{Binding Height, RelativeSource={RelativeSource Self}}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>    

    <Style TargetType="{x:Type Button}" x:Key="LinkButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ContentFrame" BorderBrush="Transparent"
                            BorderThickness="0 0 0 1">
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentFrame" Property="BorderBrush" Value="{StaticResource ForegroundSemiLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>